import torch
#from hitsgnn import HITSGNN
from hitsgnn_rev2 import HITSGNN
from utils import *
import argparse
import numpy as np
from metattack import MetaApprox, Metattack
import torch.nn.functional as F
import torch.optim as optim
import seaborn as sns
from matplotlib import pyplot as plt
import pandas as pd

parser = argparse.ArgumentParser()
parser.add_argument('--seed', type=int, default=16, help='Random seed.')
parser.add_argument('--epochs', type=int, default=200,
                    help='Number of epochs to train.')
parser.add_argument('--lr', type=float, default=0.01,
                    help='Initial learning rate.')
parser.add_argument('--hidden', type=int, default=16,
                    help='Number of hidden units.')
parser.add_argument('--dataset', type=str, default='polblogs',
                    choices=['cora', 'cora_ml', 'citeseer', 'polblogs'], help='dataset')
parser.add_argument('--ptb_rate', type=float, default=0.09,  help='pertubation rate')
parser.add_argument('--model', type=str, default='Meta-Self', choices=['A-Meta-Self', 'Meta-Self'], help='model variant')

args = parser.parse_args()
cuda = torch.cuda.is_available()
device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")

np.random.seed(args.seed)
torch.manual_seed(args.seed)
if device != 'cpu':
    torch.cuda.manual_seed(args.seed)

# === loading dataset
adj, features, labels = load_data(dataset=args.dataset)
nclass = max(labels) + 1

val_size = 0.1
test_size = 0.8
train_size = 1 - test_size - val_size

idx = np.arange(adj.shape[0])
idx_train, idx_val, idx_test = get_train_val_test(idx, train_size, val_size, test_size, stratify=labels)


print("idx_test", type(idx_test))


idx_test1=[1, 4, 5, 7, 10, 12, 16, 19, 20, 21, 23, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 46, 47, 51, 52, 59, 60, 61, 62, 64, 65, 68, 71, 72, 73, 74, 75, 76, 79, 80, 81, 85, 86, 91, 92, 94, 95, 96, 99, 100, 102, 110, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 130, 137, 138, 145, 146, 149, 150, 151, 152, 154, 155, 156, 158, 160, 162, 163, 164, 165, 168, 169, 172, 176, 178, 180, 181, 183, 184, 186, 189, 191, 192, 194, 195, 197, 199, 202, 204, 206, 207, 208, 210, 211, 214, 216, 218, 219, 220, 221, 227, 228, 230, 233, 234, 235, 239, 242, 243, 246, 248, 249, 250, 254, 258, 259, 260, 261, 262, 265, 269, 271, 273, 274, 278, 279, 285, 287, 290, 291, 293, 294, 300, 302, 304, 306, 307, 308, 310, 312, 313, 316, 317, 321, 329, 331, 333, 336, 339, 340, 342, 344, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 395, 398, 401, 402, 406, 408, 409, 411, 413, 414, 417, 418, 421, 423, 424, 426, 427, 428, 429, 431, 432, 433, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 457, 460, 461, 462, 464, 465, 466, 468, 469, 472, 473, 474, 480, 482, 483, 484, 485, 487, 490, 491, 495, 496, 497, 500, 502, 503, 504, 505, 506, 508, 513, 516, 517, 519, 521, 522, 523, 524, 526, 527, 528, 531, 533, 535, 539, 543, 545, 546, 552, 553, 557, 560, 563, 564, 565, 567, 569, 570, 575, 576, 577, 579, 581, 582, 583, 585, 588, 589, 590, 591, 592, 596, 597, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 618, 619, 621, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 638, 639, 642, 643, 645, 646, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 660, 661, 664, 665, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 691, 693, 694, 695, 696, 698, 700, 702, 704, 705, 706, 708, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 723, 724, 725, 726, 727, 728, 730, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 747, 749, 750, 752, 755, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 775, 778, 780, 783, 785, 787, 788, 791, 792, 793, 798, 799, 800, 803, 804, 806, 807, 808, 810, 811, 813, 814, 815, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 834, 835, 836, 837, 839, 840, 841, 844, 846, 847, 850, 851, 853, 854, 855, 857, 859, 862, 863, 864, 867, 868, 869, 870, 872, 873, 874, 876, 881, 882, 883, 884, 885, 887, 888, 889, 891, 893, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 911, 914, 915, 917, 918, 919, 920, 922, 925, 927, 928, 929, 931, 932, 934, 935, 938, 940, 941, 943, 945, 947, 950, 952, 953, 956, 957, 960, 962, 964, 965, 966, 967, 968, 970, 972, 975, 978, 979, 980, 983, 984, 985, 986, 987, 988, 989, 990, 992, 994, 995, 996, 998, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1013, 1015, 1016, 1017, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1035, 1036, 1038, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1060, 1061, 1062, 1065, 1068, 1070, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1103, 1104, 1106, 1108, 1111, 1113, 1114, 1117, 1118, 1120, 1126, 1127, 1128, 1129, 1131, 1133, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1145, 1147, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1172, 1175, 1176, 1177, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1196, 1198, 1199, 1200, 1201, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1220]

idx_test2=[1, 5, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 52, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 106, 107, 109, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 137, 138, 142, 143, 144, 145, 146, 148, 149, 151, 152, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 216, 218, 219, 220, 221, 223, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 247, 248, 249, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 273, 275, 276, 277, 278, 281, 283, 286, 287, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 313, 314, 316, 317, 321, 323, 329, 330, 331, 333, 335, 339, 340, 341, 342, 344, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 411, 412, 413, 415, 417, 418, 419, 421, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 460, 461, 464, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 490, 493, 495, 496, 497, 500, 502, 503, 504, 505, 507, 508, 511, 512, 513, 516, 517, 519, 520, 521, 522, 523, 524, 526, 527, 528, 531, 532, 535, 538, 539, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 559, 560, 561, 563, 564, 565, 567, 568, 569, 570, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 587, 588, 589, 590, 591, 592, 595, 596, 597, 598, 600, 601, 602, 605, 606, 607, 609, 610, 611, 612, 613, 614, 616, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 642, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 660, 661, 663, 664, 667, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 703, 704, 705, 706, 708, 709, 711, 712, 713, 714, 715, 716, 717, 719, 721, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 752, 753, 755, 756, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 775, 778, 779, 783, 788, 791, 792, 793, 794, 797, 798, 799, 800, 803, 804, 806, 807, 808, 810, 812, 814, 815, 816, 817, 818, 819, 820, 826, 827, 828, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 851, 853, 854, 855, 856, 859, 860, 861, 862, 863, 864, 865, 867, 869, 870, 872, 873, 874, 876, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 909, 912, 914, 918, 919, 920, 922, 923, 927, 929, 931, 932, 934, 935, 939, 940, 941, 943, 945, 946, 950, 951, 952, 953, 954, 956, 957, 958, 960, 964, 965, 966, 967, 968, 970, 972, 975, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 992, 994, 995, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1015, 1016, 1017, 1020, 1021, 1023, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1045, 1046, 1048, 1049, 1051, 1052, 1053, 1054, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1113, 1114, 1117, 1118, 1119, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1172, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1196, 1198, 1199, 1201, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221]

idx_test3=[1, 4, 5, 7, 9, 10, 12, 16, 19, 20, 21, 23, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 59, 60, 61, 62, 64, 65, 68, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 106, 110, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 139, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 158, 160, 162, 163, 164, 165, 168, 169, 172, 176, 178, 179, 180, 181, 183, 184, 186, 188, 189, 191, 192, 194, 195, 197, 199, 202, 204, 206, 207, 208, 210, 211, 214, 216, 218, 219, 220, 221, 227, 228, 230, 233, 234, 235, 237, 239, 242, 243, 246, 248, 249, 250, 254, 258, 259, 260, 261, 262, 265, 269, 271, 273, 274, 278, 279, 285, 287, 290, 291, 293, 294, 298, 300, 302, 304, 305, 306, 307, 308, 310, 312, 313, 316, 317, 318, 319, 321, 329, 331, 332, 333, 336, 339, 340, 342, 344, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 391, 395, 397, 398, 401, 402, 406, 408, 409, 410, 411, 413, 414, 415, 417, 418, 421, 423, 424, 426, 427, 428, 429, 431, 432, 433, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 457, 460, 461, 462, 464, 465, 466, 468, 469, 471, 472, 473, 474, 480, 482, 483, 484, 485, 487, 490, 491, 495, 496, 497, 500, 502, 503, 504, 505, 506, 508, 512, 513, 516, 517, 519, 521, 522, 523, 524, 526, 527, 528, 531, 533, 535, 539, 543, 545, 546, 549, 552, 553, 563, 564, 565, 567, 569, 570, 572, 575, 576, 577, 579, 581, 582, 583, 585, 588, 589, 590, 591, 592, 596, 597, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 618, 619, 620, 621, 623, 625, 626, 627, 628, 629, 630, 632, 633, 634, 635, 638, 639, 642, 643, 645, 646, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 660, 661, 664, 665, 666, 668, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 700, 702, 704, 705, 706, 708, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 723, 724, 725, 726, 727, 728, 730, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 750, 751, 752, 755, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 772, 773, 775, 778, 780, 783, 785, 787, 788, 791, 792, 793, 798, 799, 800, 803, 804, 806, 807, 808, 810, 811, 813, 814, 815, 817, 819, 820, 821, 822, 824, 826, 827, 828, 830, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 850, 851, 853, 854, 855, 857, 859, 862, 863, 864, 867, 868, 869, 870, 871, 872, 873, 874, 876, 881, 882, 883, 884, 885, 886, 887, 888, 889, 891, 893, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 908, 909, 911, 914, 915, 917, 918, 919, 920, 922, 925, 927, 929, 931, 932, 934, 935, 938, 940, 941, 943, 945, 947, 948, 950, 952, 953, 956, 957, 960, 962, 964, 965, 966, 967, 968, 970, 972, 975, 978, 979, 980, 983, 984, 985, 986, 987, 988, 989, 990, 992, 994, 995, 996, 998, 1002, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1015, 1016, 1017, 1019, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1034, 1035, 1036, 1037, 1038, 1039, 1042, 1043, 1045, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1060, 1061, 1062, 1065, 1068, 1070, 1071, 1072, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1091, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1103, 1104, 1106, 1108, 1111, 1113, 1114, 1117, 1118, 1120, 1126, 1127, 1128, 1129, 1131, 1133, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1150, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1172, 1175, 1176, 1177, 1181, 1182, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1196, 1198, 1199, 1200, 1201, 1204, 1205, 1207, 1208, 1209, 1210, 1211, 1212, 1214, 1216, 1218, 1220]

idx_test4=[1, 5, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 52, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 109, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 137, 138, 142, 143, 144, 145, 146, 149, 151, 152, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 189, 190, 191, 192, 193, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 216, 218, 219, 220, 221, 223, 226, 229, 230, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 247, 248, 249, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 273, 275, 276, 277, 278, 281, 283, 286, 287, 290, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 313, 314, 316, 317, 321, 323, 329, 330, 331, 333, 335, 339, 340, 341, 342, 344, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 368, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 401, 405, 406, 407, 408, 409, 411, 412, 413, 415, 417, 418, 419, 421, 423, 425, 426, 427, 429, 431, 432, 433, 434, 435, 436, 438, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 460, 461, 464, 465, 466, 467, 468, 471, 473, 474, 475, 476, 479, 480, 482, 484, 485, 487, 488, 489, 490, 493, 495, 496, 497, 500, 502, 503, 504, 505, 507, 508, 511, 512, 513, 516, 517, 519, 520, 521, 522, 523, 524, 526, 527, 528, 531, 532, 535, 538, 539, 544, 545, 546, 547, 549, 550, 551, 552, 553, 556, 559, 560, 561, 563, 564, 565, 567, 569, 570, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 587, 588, 589, 590, 591, 592, 595, 596, 597, 598, 600, 601, 602, 605, 606, 607, 609, 610, 611, 612, 613, 614, 616, 621, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 638, 642, 643, 646, 648, 649, 650, 651, 652, 654, 655, 656, 657, 658, 660, 661, 663, 664, 667, 668, 670, 672, 675, 676, 677, 678, 679, 680, 681, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 704, 705, 706, 708, 709, 712, 713, 714, 715, 716, 717, 719, 721, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 747, 748, 749, 750, 752, 753, 755, 756, 757, 758, 761, 762, 763, 764, 765, 766, 768, 769, 770, 772, 773, 775, 778, 779, 783, 788, 791, 792, 793, 794, 797, 798, 799, 800, 803, 804, 806, 807, 808, 810, 812, 814, 815, 816, 817, 818, 819, 820, 826, 827, 828, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 846, 847, 851, 853, 854, 855, 856, 859, 860, 862, 863, 864, 865, 867, 869, 870, 872, 873, 874, 876, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 898, 899, 900, 901, 903, 904, 905, 906, 907, 909, 912, 914, 918, 919, 920, 922, 923, 929, 931, 932, 934, 935, 939, 940, 941, 943, 945, 946, 950, 951, 952, 953, 954, 956, 957, 958, 960, 964, 965, 966, 967, 968, 970, 972, 975, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 992, 994, 995, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1013, 1015, 1016, 1017, 1020, 1021, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1045, 1048, 1049, 1051, 1052, 1053, 1054, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1110, 1111, 1113, 1114, 1117, 1118, 1119, 1121, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1172, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1196, 1198, 1199, 1204, 1205, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1218, 1219, 1220]

idx_test5=[5, 10, 12, 19, 20, 21, 23, 25, 27, 31, 33, 35, 36, 38, 41, 42, 47, 59, 61, 64, 71, 73, 75, 76, 80, 81, 85, 86, 88, 92, 95, 96, 99, 100, 114, 118, 119, 122, 125, 126, 127, 129, 130, 137, 138, 146, 151, 154, 155, 162, 164, 168, 169, 176, 178, 181, 184, 186, 189, 191, 194, 197, 199, 204, 206, 214, 216, 218, 228, 230, 234, 237, 242, 243, 250, 254, 259, 261, 271, 278, 285, 290, 291, 300, 302, 304, 306, 307, 308, 310, 313, 316, 329, 333, 339, 340, 342, 346, 347, 350, 352, 355, 356, 357, 358, 359, 363, 364, 365, 368, 371, 372, 373, 375, 376, 379, 380, 382, 383, 385, 402, 406, 408, 411, 417, 421, 427, 436, 438, 441, 442, 444, 446, 448, 449, 450, 452, 457, 461, 469, 472, 480, 482, 483, 484, 485, 495, 496, 497, 503, 504, 505, 516, 519, 523, 524, 528, 533, 536, 539, 552, 553, 559, 563, 564, 565, 569, 570, 575, 581, 583, 585, 588, 589, 590, 591, 592, 596, 597, 600, 601, 602, 603, 604, 605, 606, 607, 609, 613, 614, 618, 623, 626, 627, 630, 632, 633, 634, 635, 638, 642, 645, 646, 648, 649, 650, 652, 654, 656, 657, 658, 660, 661, 664, 665, 666, 668, 670, 672, 674, 676, 678, 681, 683, 685, 686, 687, 688, 691, 693, 694, 695, 696, 698, 702, 704, 705, 706, 708, 711, 712, 713, 714, 715, 717, 719, 725, 728, 734, 736, 738, 739, 740, 741, 742, 743, 744, 747, 750, 752, 755, 757, 758, 759, 761, 762, 765, 766, 767, 768, 769, 770, 775, 778, 780, 783, 787, 788, 792, 793, 798, 803, 804, 806, 807, 808, 810, 811, 815, 819, 820, 821, 822, 824, 826, 834, 835, 836, 837, 839, 840, 841, 846, 847, 850, 851, 853, 854, 855, 857, 859, 862, 863, 867, 868, 869, 870, 871, 872, 873, 874, 876, 881, 882, 883, 884, 885, 887, 889, 891, 893, 896, 898, 899, 900, 901, 903, 904, 905, 907, 908, 909, 911, 914, 915, 917, 918, 919, 920, 922, 925, 929, 931, 932, 934, 935, 940, 945, 947, 950, 952, 956, 957, 962, 964, 965, 966, 967, 968, 970, 972, 975, 979, 980, 983, 984, 985, 986, 987, 988, 989, 992, 994, 995, 996, 998, 1002, 1003, 1004, 1005, 1006, 1009, 1010, 1015, 1023, 1024, 1027, 1028, 1029, 1030, 1032, 1035, 1036, 1038, 1039, 1042, 1045, 1047, 1049, 1050, 1051, 1052, 1053, 1056, 1060, 1061, 1071, 1072, 1074, 1076, 1077, 1078, 1080, 1082, 1084, 1085, 1086, 1087, 1091, 1092, 1094, 1095, 1097, 1098, 1099, 1103, 1104, 1106, 1108, 1111, 1114, 1118, 1120, 1126, 1127, 1131, 1135, 1136, 1137, 1141, 1142, 1143, 1145, 1147, 1150, 1152, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1170, 1172, 1176, 1177, 1181, 1184, 1190, 1191, 1192, 1196, 1198, 1199, 1200, 1204, 1205, 1207, 1208, 1209, 1211, 1212, 1214, 1216, 1220]

idx_test6=[1, 5, 7, 10, 12, 16, 17, 19, 20, 21, 23, 25, 27, 31, 36, 37, 38, 42, 47, 48, 56, 58, 59, 61, 65, 66, 71, 73, 75, 76, 85, 92, 93, 94, 98, 99, 100, 102, 109, 111, 112, 114, 115, 118, 120, 122, 123, 126, 127, 129, 131, 134, 137, 146, 151, 152, 155, 162, 164, 165, 166, 168, 169, 175, 176, 177, 178, 180, 181, 184, 189, 190, 191, 194, 197, 201, 202, 203, 204, 206, 208, 211, 216, 218, 219, 230, 231, 233, 234, 235, 237, 238, 247, 248, 249, 254, 266, 271, 273, 286, 291, 292, 293, 297, 298, 299, 300, 302, 303, 304, 306, 307, 308, 310, 311, 313, 316, 321, 329, 330, 331, 333, 335, 339, 340, 348, 350, 352, 354, 357, 358, 359, 362, 363, 364, 365, 368, 371, 372, 373, 374, 375, 376, 379, 380, 382, 383, 385, 388, 391, 395, 397, 398, 400, 401, 406, 409, 411, 417, 418, 421, 423, 427, 432, 434, 435, 436, 438, 441, 442, 443, 444, 447, 448, 449, 450, 452, 457, 460, 461, 465, 466, 468, 471, 473, 474, 475, 479, 480, 482, 484, 485, 488, 490, 493, 495, 496, 500, 502, 503, 505, 507, 512, 513, 516, 519, 523, 524, 526, 528, 535, 536, 539, 546, 551, 552, 560, 561, 563, 564, 565, 567, 568, 569, 570, 575, 576, 580, 581, 582, 583, 588, 589, 591, 592, 595, 596, 597, 598, 600, 601, 602, 605, 607, 609, 610, 611, 612, 613, 614, 616, 621, 623, 626, 627, 628, 631, 633, 634, 635, 638, 642, 643, 646, 648, 649, 650, 651, 654, 656, 657, 658, 660, 661, 664, 667, 668, 670, 672, 675, 676, 681, 684, 687, 688, 689, 690, 691, 693, 694, 695, 696, 698, 699, 700, 704, 705, 706, 708, 711, 712, 713, 714, 715, 716, 717, 719, 724, 725, 726, 727, 728, 730, 732, 734, 736, 740, 741, 742, 743, 744, 747, 748, 749, 750, 752, 755, 757, 758, 761, 763, 764, 765, 767, 768, 769, 770, 772, 775, 778, 779, 783, 788, 792, 793, 794, 797, 798, 800, 803, 804, 806, 807, 808, 810, 814, 815, 819, 820, 826, 827, 828, 834, 835, 836, 837, 839, 840, 841, 842, 843, 846, 847, 851, 853, 854, 855, 856, 859, 863, 864, 865, 867, 869, 870, 873, 874, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 894, 898, 900, 901, 903, 904, 905, 906, 907, 909, 914, 918, 919, 920, 922, 929, 931, 932, 934, 935, 939, 940, 943, 945, 946, 950, 952, 956, 957, 960, 964, 965, 967, 970, 972, 975, 979, 980, 981, 983, 985, 986, 987, 988, 989, 992, 994, 995, 997, 998, 1001, 1003, 1004, 1005, 1006, 1008, 1009, 1010, 1013, 1015, 1016, 1021, 1023, 1027, 1028, 1029, 1030, 1032, 1034, 1035, 1036, 1038, 1040, 1041, 1042, 1043, 1045, 1048, 1049, 1051, 1052, 1053, 1057, 1059, 1060, 1062, 1063, 1068, 1070, 1071, 1072, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1086, 1087, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1104, 1106, 1107, 1108, 1113, 1114, 1117, 1118, 1119, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1136, 1137, 1138, 1141, 1142, 1143, 1145, 1147, 1148, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1170, 1172, 1174, 1175, 1176, 1177, 1179, 1181, 1184, 1188, 1189, 1190, 1193, 1196, 1198, 1199, 1201, 1204, 1205, 1208, 1209, 1211, 1212, 1214, 1216, 1218, 1220]
#print("adj.shape[0]",adj.shape[0])
idx_test7=[17, 48, 56, 58, 66, 98, 109, 120, 166, 175, 177, 190, 201, 203, 231, 238, 247, 266, 286, 292, 297, 299, 303, 311, 330, 335, 400, 434, 475, 479, 488, 493, 507, 536, 551, 561, 568, 580, 595, 598, 611, 631, 667, 699, 732, 779, 794, 797, 856, 865, 890, 892, 894, 939, 946, 981, 997, 1001, 1021, 1040, 1041, 1063, 1107, 1119, 1125, 1130, 1151, 1174, 1179, 1189]

#idx_test8=[6, 8, 17, 22, 39, 48, 49, 56, 57, 58, 63, 66, 67, 70, 77, 78, 87, 98, 101, 104, 109, 120, 121, 124, 142, 143, 161, 166, 174, 175, 177, 185, 187, 190, 193, 198, 201, 203, 205, 212, 223, 226, 229, 231, 238, 241, 247, 263, 264, 266, 272, 275, 276, 277, 281, 283, 286, 292, 297, 299, 301, 303, 314, 323, 330, 335, 341, 386, 389, 392, 394, 400, 405, 407, 412, 419, 425, 434, 453, 454, 467, 475, 476, 479, 488, 489, 493, 507, 511, 520, 532, 538, 544, 547, 550, 551, 556, 559, 561, 573, 574, 580, 587, 595, 598, 611, 631, 655, 663, 667, 699, 709, 729, 732, 753, 756, 779, 794, 797, 812, 816, 818, 856, 860, 865, 890, 892, 894, 895, 912, 923, 939, 946, 951, 954, 958, 981, 997, 999, 1001, 1007, 1020, 1021, 1031, 1040, 1041, 1054, 1063, 1066, 1069, 1075, 1083, 1089, 1101, 1102, 1107, 1110, 1119, 1121, 1125, 1130, 1139, 1140, 1146, 1151, 1174, 1179, 1180, 1189, 1213, 1215, 1219]

idx_test8=[4, 33, 35, 51, 62, 64, 72, 74, 80, 91, 110, 119, 125, 150, 160, 172, 186, 195, 199, 210, 214, 227, 228, 246, 250, 274, 279, 285, 336, 346, 347, 360, 378, 387, 402, 414, 424, 428, 462, 469, 472, 483, 491, 506, 533, 543, 557, 585, 603, 604, 618, 619, 639, 645, 653, 665, 666, 674, 682, 683, 685, 686, 702, 720, 723, 745, 759, 780, 785, 787, 811, 813, 821, 822, 824, 830, 850, 857, 868, 908, 911, 915, 917, 925, 927, 928, 938, 947, 962, 996, 1024, 1039, 1047, 1050, 1056, 1079, 1084, 1091, 1120, 1133, 1158, 1168, 1182, 1186, 1187, 1191, 1200, 1207]

idx_test=np.array(idx_test8)

#idx_test=idx_test1

idx_unlabeled = np.union1d(idx_val, idx_test)





perturbations = int(args.ptb_rate * (adj.sum()//2))

adj, features, labels = preprocess(adj, features, labels, preprocess_adj=False)



# set up attack model
if 'Self' in args.model:
    lambda_ = 0
if 'Train' in args.model:
    lambda_ = 1
if 'Both' in args.model:
    lambda_ = 0.5

if 'A' in args.model:
    model = MetaApprox(nfeat=features.shape[1], hidden_sizes=[args.hidden],
                       nnodes=adj.shape[0], nclass=nclass, dropout=0.5,
                       train_iters=100, attack_features=False, lambda_=lambda_, device=device)

else:
    model = Metattack(nfeat=features.shape[1], hidden_sizes=[args.hidden],
                       nnodes=adj.shape[0], nclass=nclass, dropout=0.5,
                       train_iters=100, attack_features=False, lambda_=lambda_, device=device)

if device != 'cpu':
    adj = adj.to(device)
    features = features.to(device)
    labels = labels.to(device)
    model = model.to(device)


def test(adj):
    ''' test on HITSGNN '''

    adj = normalize_adj_tensor(adj)
    hitsgnn = HITSGNN(nfeat=features.shape[1],
              nhid=args.hidden,
              nclass=labels.max().item() + 1,
              dropout=0.5)

    if device != 'cpu':
        hitsgnn = hitsgnn.to(device)

    optimizer = optim.Adam(hitsgnn.parameters(),
                           lr=args.lr, weight_decay=5e-4)

    hitsgnn.train()

    for epoch in range(args.epochs):
        optimizer.zero_grad()
        output = hitsgnn(features, adj)
        loss_train = F.nll_loss(output[idx_train], labels[idx_train])
        acc_train = accuracy(output[idx_train], labels[idx_train])
        loss_train.backward()
        optimizer.step()

    hitsgnn.eval()
    output = hitsgnn(features, adj)


    loss_test = F.nll_loss(output[idx_test], labels[idx_test])
    acc_test = accuracy(output[idx_test], labels[idx_test])


    # print("Test set results:",
    #       "loss= {:.4f}".format(loss_test.item()),
    #       "accuracy= {:.4f}".format(acc_test.item()))

    return acc_test.item()


def main():

    acc = []
    runs = 1
    
    for i in range(runs):
        acc.append(test(adj))

    torch.cuda.empty_cache()

    #for i in range(3):
    
    modified_adj = model(features, adj, labels, idx_train,
                            idx_unlabeled, perturbations, ll_constraint=False)
    modified_adj = modified_adj.detach()

    for i in range(runs):
        acc.append(test(modified_adj))

    print("acc",acc)



    #data=pd.DataFrame({"Acc. Clean":clean_acc,"Acc. Perturbed":attacked_acc})

    #plt.figure(figsize=(6,6))
    #sns.boxplot(data=data)#, re_trainings*[accuracy_logistic]])

    #plt.title("Accuracy before/after perturbing {}% edges using model {}".format(args.ptb_rate*100, args.model))
    #plt.savefig("results_on_{}.png".format(args.dataset), dpi=600)
    #plt.show()


if __name__ == '__main__':
    main()



#neighbor type 0:
#acc [0.9376278118609408, 0.9222903885480573, 0.9335378323108385, 0.9284253578732107]

#neighbor type 1:
#acc [0.9596662030598052, 0.9388038942976356,0.9388038942976356, 0.9346314325452016]

#neighbor type 2:
#acc [0.94377990430622, 0.9449760765550239,0.94377990430622, 0.9497607655502392]

#neighbor type 3:
#acc [0.9580602883355177, 0.9357798165137615, 0.944954128440367,  0.9423328964613369]
    
#neighbor type 4:
#acc [0.9465174129353233, 0.9490049751243781, 0.9440298507462687, 0.945273631840796]

#neighbor type 5:
#acc [0.9796334012219958, 0.9592668024439918,  0.9287169042769856, 0.9592668024439918]

#neighbor type 6:
#acc [0.9703832752613241, 0.9337979094076655, 0.9529616724738676, 0.9721254355400697]

#neighbor type 7:
#acc [0.8857142857142857, 0.9142857142857143, 0.8428571428571429, 0.9]

#neighbor type 8:
#acc [0.877906976744186, 0.877906976744186, 0.877906976744186, 0.8837209302325582]

#neighbor type 8-0:
#acc [0.9351851851851851, 0.8796296296296295, 0.8888888888888888, 0.861111111111111]