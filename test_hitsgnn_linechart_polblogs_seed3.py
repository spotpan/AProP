import torch
#from hitsgnn import HITSGNN
from hitsgnn_rev2 import HITSGNN
from utils import *
import argparse
import numpy as np
from metattack import MetaApprox, Metattack
import torch.nn.functional as F
import torch.optim as optim
import seaborn as sns
from matplotlib import pyplot as plt
import pandas as pd

parser = argparse.ArgumentParser()
parser.add_argument('--seed', type=int, default=17, help='Random seed.')
parser.add_argument('--epochs', type=int, default=200,
                    help='Number of epochs to train.')
parser.add_argument('--lr', type=float, default=0.01,
                    help='Initial learning rate.')
parser.add_argument('--hidden', type=int, default=16,
                    help='Number of hidden units.')
parser.add_argument('--dataset', type=str, default='polblogs',
                    choices=['cora', 'cora_ml', 'citeseer', 'polblogs'], help='dataset')
parser.add_argument('--ptb_rate', type=float, default=0.09,  help='pertubation rate')
parser.add_argument('--model', type=str, default='Meta-Self', choices=['A-Meta-Self', 'Meta-Self'], help='model variant')

args = parser.parse_args()
cuda = torch.cuda.is_available()
device = torch.device("cuda:0" if torch.cuda.is_available() else "cpu")

np.random.seed(args.seed)
torch.manual_seed(args.seed)
if device != 'cpu':
    torch.cuda.manual_seed(args.seed)

# === loading dataset
adj, features, labels = load_data(dataset=args.dataset)
nclass = max(labels) + 1

val_size = 0.1
test_size = 0.8
train_size = 1 - test_size - val_size

idx = np.arange(adj.shape[0])
idx_train, idx_val, idx_test = get_train_val_test(idx, train_size, val_size, test_size, stratify=labels)


print("idx_test", type(idx_test))


idx_test1=[0, 1, 4, 5, 7, 10, 11, 13, 15, 16, 18, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 46, 47, 50, 51, 52, 53, 59, 60, 61, 64, 65, 69, 72, 73, 74, 75, 79, 80, 83, 84, 85, 86, 90, 91, 92, 94, 95, 96, 99, 100, 103, 108, 110, 115, 116, 117, 118, 119, 123, 126, 127, 128, 130, 137, 138, 140, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 168, 172, 176, 178, 180, 181, 183, 184, 186, 189, 191, 194, 195, 196, 197, 199, 200, 206, 208, 211, 217, 218, 219, 220, 221, 224, 227, 228, 230, 234, 239, 243, 244, 245, 246, 249, 252, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 273, 274, 278, 280, 282, 285, 287, 288, 291, 295, 300, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 321, 322, 326, 329, 331, 332, 333, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 350, 353, 356, 359, 360, 361, 362, 363, 364, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 390, 391, 395, 398, 401, 403, 406, 408, 409, 413, 415, 418, 421, 423, 424, 426, 427, 428, 429, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 456, 459, 460, 462, 463, 465, 466, 468, 470, 472, 474, 477, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 494, 496, 500, 502, 503, 504, 506, 508, 510, 512, 514, 515, 517, 519, 521, 523, 524, 525, 526, 527, 531, 533, 535, 539, 542, 543, 545, 552, 553, 558, 559, 563, 564, 565, 567, 570, 571, 576, 577, 578, 579, 582, 583, 585, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 619, 621, 622, 623, 625, 628, 629, 632, 633, 637, 639, 642, 643, 644, 645, 648, 649, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 665, 666, 668, 670, 673, 674, 675, 676, 678, 679, 682, 683, 685, 686, 687, 688, 691, 692, 694, 695, 696, 698, 701, 704, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 724, 726, 727, 728, 730, 731, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 754, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 776, 777, 778, 780, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 795, 796, 798, 799, 802, 803, 804, 805, 806, 807, 808, 810, 811, 814, 817, 821, 822, 823, 824, 825, 827, 828, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846, 847, 848, 849, 850, 852, 854, 855, 857, 858, 859, 862, 863, 866, 867, 868, 869, 870, 872, 873, 874, 875, 876, 878, 880, 881, 883, 884, 885, 887, 888, 889, 893, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 910, 911, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 930, 931, 932, 933, 934, 935, 937, 940, 941, 944, 945, 947, 948, 950, 953, 955, 956, 957, 960, 961, 963, 965, 966, 967, 968, 970, 971, 972, 974, 975, 976, 978, 979, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 998, 1000, 1004, 1005, 1006, 1009, 1010, 1012, 1013, 1014, 1017, 1023, 1025, 1027, 1028, 1030, 1032, 1033, 1035, 1036, 1038, 1039, 1042, 1043, 1045, 1047, 1049, 1050, 1051, 1053, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1067, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1104, 1105, 1109, 1112, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1147, 1149, 1150, 1152, 1153, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1173, 1175, 1176, 1177, 1178, 1182, 1183, 1184, 1185, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1214, 1216, 1217, 1218, 1220]

idx_test2=[0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 46, 47, 48, 49, 52, 53, 57, 59, 60, 61, 63, 65, 66, 67, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 109, 113, 115, 116, 117, 118, 120, 123, 124, 126, 127, 128, 130, 131, 133, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 168, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 197, 198, 200, 201, 203, 205, 206, 208, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 233, 234, 237, 239, 240, 241, 243, 244, 245, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 280, 281, 282, 283, 287, 288, 289, 291, 292, 295, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 313, 314, 317, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354, 356, 359, 361, 362, 363, 364, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 412, 413, 415, 418, 421, 422, 423, 425, 426, 427, 429, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 454, 456, 459, 460, 463, 465, 466, 468, 470, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 492, 494, 496, 498, 500, 501, 502, 503, 504, 507, 508, 511, 512, 514, 515, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 530, 531, 532, 535, 538, 539, 542, 544, 545, 547, 550, 551, 552, 553, 555, 559, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 573, 576, 577, 578, 579, 580, 582, 583, 584, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 605, 606, 607, 609, 610, 612, 613, 614, 616, 621, 622, 623, 625, 628, 629, 632, 633, 637, 642, 643, 644, 647, 648, 649, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 667, 668, 670, 673, 674, 675, 676, 678, 679, 684, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 721, 722, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 753, 756, 758, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 776, 777, 778, 779, 782, 783, 784, 788, 789, 791, 792, 794, 795, 797, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 823, 825, 827, 828, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 846, 847, 849, 852, 854, 855, 856, 858, 859, 860, 861, 862, 863, 865, 866, 867, 869, 870, 872, 873, 874, 875, 876, 881, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 912, 913, 914, 916, 919, 920, 921, 922, 923, 930, 931, 932, 933, 934, 935, 937, 940, 941, 942, 945, 946, 950, 951, 953, 956, 957, 960, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 997, 998, 999, 1000, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1017, 1020, 1021, 1022, 1023, 1025, 1026, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1119, 1121, 1122, 1125, 1127, 1128, 1130, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221]

idx_test3=[0, 1, 4, 5, 7, 9, 10, 11, 13, 14, 15, 16, 18, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 55, 59, 60, 61, 64, 65, 69, 72, 73, 74, 75, 77, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 102, 103, 108, 110, 115, 116, 117, 118, 119, 123, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 144, 145, 146, 147, 149, 150, 152, 154, 155, 156, 157, 158, 160, 162, 163, 164, 168, 172, 176, 178, 179, 180, 181, 183, 184, 186, 189, 191, 194, 195, 196, 197, 199, 200, 206, 208, 210, 211, 217, 218, 219, 220, 221, 224, 227, 228, 230, 233, 234, 237, 239, 243, 244, 245, 246, 249, 251, 252, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 273, 274, 277, 278, 279, 280, 282, 285, 287, 288, 291, 295, 300, 302, 304, 306, 307, 308, 310, 312, 313, 315, 317, 318, 319, 321, 322, 324, 326, 327, 329, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 350, 353, 354, 356, 359, 360, 361, 362, 363, 364, 368, 370, 371, 372, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 387, 388, 390, 391, 395, 398, 401, 403, 404, 406, 408, 409, 413, 415, 418, 421, 423, 424, 426, 427, 428, 429, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 455, 456, 459, 460, 462, 463, 465, 466, 468, 470, 472, 474, 477, 480, 481, 482, 483, 484, 485, 487, 490, 491, 492, 494, 496, 500, 502, 503, 504, 506, 508, 510, 512, 514, 515, 517, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 535, 536, 539, 542, 543, 545, 552, 553, 558, 562, 563, 564, 565, 567, 569, 570, 571, 572, 576, 577, 578, 579, 582, 583, 585, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 619, 620, 621, 622, 623, 625, 628, 629, 632, 633, 637, 639, 641, 642, 643, 644, 645, 648, 649, 651, 652, 653, 654, 656, 657, 659, 660, 661, 662, 665, 666, 668, 670, 673, 674, 675, 676, 678, 679, 682, 683, 685, 686, 687, 688, 691, 692, 694, 695, 696, 698, 701, 704, 705, 706, 707, 708, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 724, 726, 727, 728, 730, 731, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 754, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 776, 777, 778, 780, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 795, 796, 798, 799, 802, 803, 804, 805, 806, 807, 808, 810, 811, 814, 817, 821, 822, 823, 824, 825, 827, 828, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846, 847, 848, 849, 850, 852, 854, 855, 857, 858, 859, 862, 863, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 878, 879, 880, 881, 883, 884, 885, 886, 887, 888, 889, 893, 897, 898, 899, 900, 901, 903, 904, 905, 906, 907, 910, 911, 913, 914, 915, 916, 917, 919, 920, 921, 922, 924, 930, 931, 932, 933, 934, 935, 937, 940, 941, 944, 945, 947, 948, 949, 950, 953, 955, 956, 957, 960, 961, 963, 965, 966, 967, 968, 970, 971, 972, 974, 975, 976, 978, 979, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 998, 1000, 1004, 1005, 1006, 1008, 1009, 1010, 1012, 1013, 1014, 1017, 1021, 1023, 1025, 1027, 1028, 1030, 1032, 1033, 1035, 1036, 1038, 1039, 1042, 1043, 1045, 1047, 1049, 1050, 1051, 1053, 1057, 1058, 1059, 1060, 1061, 1062, 1065, 1067, 1071, 1072, 1074, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1104, 1105, 1109, 1111, 1112, 1114, 1115, 1117, 1120, 1121, 1122, 1123, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1147, 1149, 1150, 1152, 1153, 1154, 1155, 1158, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1173, 1175, 1176, 1177, 1178, 1182, 1183, 1184, 1185, 1186, 1188, 1190, 1191, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1212, 1214, 1216, 1217, 1218, 1220]

idx_test4=[0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 42, 43, 46, 47, 48, 49, 52, 59, 60, 61, 63, 65, 66, 67, 73, 75, 77, 79, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 108, 109, 113, 116, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 137, 138, 140, 143, 144, 145, 146, 147, 149, 152, 154, 155, 156, 158, 159, 161, 162, 163, 164, 166, 167, 168, 170, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 189, 190, 191, 193, 197, 198, 200, 201, 203, 205, 206, 208, 211, 212, 215, 217, 218, 219, 220, 221, 223, 224, 226, 229, 230, 231, 233, 234, 237, 239, 240, 241, 243, 244, 245, 249, 251, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 278, 280, 281, 282, 288, 291, 292, 295, 299, 300, 302, 303, 304, 306, 307, 308, 310, 312, 313, 314, 317, 321, 323, 324, 325, 326, 327, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 353, 354, 356, 359, 361, 362, 363, 364, 368, 370, 371, 372, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 394, 396, 398, 400, 401, 404, 405, 406, 407, 408, 409, 412, 413, 415, 418, 421, 422, 423, 425, 426, 427, 429, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 453, 454, 455, 456, 459, 460, 463, 465, 466, 468, 470, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 492, 494, 496, 500, 501, 502, 503, 504, 507, 508, 511, 512, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 535, 536, 538, 539, 542, 544, 545, 547, 550, 551, 552, 553, 555, 559, 561, 562, 563, 564, 565, 567, 569, 570, 571, 573, 576, 577, 579, 580, 582, 583, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 599, 600, 601, 602, 605, 606, 607, 609, 610, 612, 613, 614, 616, 621, 622, 623, 625, 628, 629, 632, 633, 637, 641, 642, 643, 644, 647, 648, 649, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 667, 668, 670, 673, 674, 675, 676, 678, 679, 684, 687, 688, 689, 691, 692, 694, 695, 696, 698, 704, 705, 706, 707, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 721, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 753, 756, 758, 760, 761, 762, 763, 764, 765, 766, 768, 769, 771, 773, 774, 776, 777, 778, 779, 782, 783, 784, 788, 789, 791, 792, 794, 795, 797, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 823, 825, 827, 828, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 844, 846, 847, 849, 852, 855, 856, 858, 859, 860, 862, 863, 865, 866, 867, 869, 870, 872, 873, 874, 875, 876, 881, 883, 884, 885, 886, 887, 888, 889, 890, 892, 893, 895, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 912, 913, 914, 916, 919, 920, 921, 922, 923, 930, 931, 932, 933, 934, 935, 937, 940, 941, 942, 945, 946, 948, 950, 951, 953, 956, 957, 960, 961, 963, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 997, 998, 999, 1000, 1001, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1012, 1013, 1014, 1017, 1020, 1021, 1022, 1023, 1025, 1027, 1028, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1040, 1041, 1042, 1043, 1044, 1045, 1049, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1071, 1072, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1083, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1097, 1098, 1099, 1101, 1104, 1105, 1107, 1109, 1110, 1111, 1112, 1114, 1115, 1117, 1119, 1121, 1122, 1125, 1127, 1128, 1130, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1160, 1163, 1164, 1165, 1166, 1167, 1169, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 1188, 1189, 1190, 1192, 1193, 1194, 1196, 1197, 1198, 1199, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1215, 1216, 1217, 1218, 1219, 1220]

idx_test5=[0, 2, 5, 10, 11, 13, 15, 20, 21, 23, 25, 30, 31, 35, 36, 42, 46, 47, 53, 59, 61, 64, 75, 80, 83, 84, 85, 86, 92, 95, 96, 99, 100, 108, 118, 119, 126, 127, 130, 131, 138, 140, 146, 150, 155, 156, 160, 162, 164, 168, 178, 184, 186, 194, 196, 197, 208, 220, 221, 224, 230, 233, 244, 245, 252, 268, 269, 271, 280, 282, 285, 288, 291, 300, 302, 304, 306, 307, 308, 310, 313, 317, 326, 333, 337, 338, 339, 345, 346, 350, 356, 359, 361, 363, 364, 368, 371, 372, 373, 374, 375, 379, 380, 382, 383, 385, 388, 390, 398, 401, 403, 408, 415, 421, 423, 426, 427, 428, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 456, 459, 466, 470, 472, 477, 480, 483, 485, 492, 494, 496, 504, 506, 515, 519, 521, 523, 524, 525, 526, 535, 539, 552, 563, 564, 565, 570, 571, 583, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 602, 603, 604, 605, 606, 607, 609, 613, 614, 619, 620, 621, 622, 623, 625, 632, 633, 637, 642, 644, 645, 648, 649, 651, 654, 656, 657, 660, 662, 665, 666, 668, 670, 674, 675, 676, 678, 683, 685, 686, 688, 691, 692, 694, 695, 696, 698, 704, 705, 706, 707, 708, 711, 712, 713, 715, 716, 717, 718, 719, 726, 728, 731, 734, 736, 738, 739, 740, 741, 742, 743, 744, 746, 747, 749, 750, 754, 758, 759, 760, 761, 762, 763, 765, 767, 768, 769, 771, 774, 776, 777, 778, 780, 782, 783, 784, 787, 788, 789, 790, 791, 792, 795, 796, 798, 799, 803, 804, 805, 807, 808, 810, 811, 822, 824, 825, 828, 832, 834, 835, 836, 837, 838, 839, 840, 841, 846, 847, 848, 849, 850, 852, 854, 855, 857, 858, 859, 862, 863, 867, 868, 869, 870, 872, 873, 874, 875, 876, 878, 880, 881, 884, 885, 887, 888, 889, 893, 897, 898, 899, 900, 901, 903, 904, 905, 907, 910, 911, 913, 914, 916, 917, 919, 920, 921, 922, 924, 930, 931, 932, 933, 940, 944, 945, 947, 950, 955, 956, 957, 961, 965, 966, 967, 970, 972, 974, 975, 976, 979, 980, 983, 984, 985, 986, 987, 988, 989, 991, 992, 995, 998, 1000, 1004, 1005, 1006, 1008, 1009, 1010, 1014, 1017, 1023, 1030, 1032, 1033, 1035, 1037, 1039, 1042, 1047, 1049, 1050, 1051, 1053, 1058, 1060, 1061, 1067, 1071, 1072, 1074, 1076, 1077, 1078, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1094, 1095, 1097, 1098, 1099, 1104, 1105, 1112, 1114, 1115, 1117, 1120, 1127, 1128, 1132, 1133, 1134, 1135, 1136, 1141, 1142, 1143, 1147, 1149, 1150, 1152, 1155, 1159, 1163, 1164, 1165, 1166, 1167, 1169, 1173, 1175, 1177, 1178, 1182, 1183, 1192, 1196, 1198, 1199, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1212, 1214, 1216, 1217, 1218, 1220]

idx_test6=[0, 1, 5, 7, 10, 11, 13, 15, 16, 17, 18, 20, 21, 25, 30, 32, 36, 37, 38, 42, 47, 48, 49, 52, 59, 60, 61, 66, 67, 75, 83, 84, 85, 92, 94, 96, 99, 100, 103, 109, 113, 118, 120, 123, 126, 127, 131, 137, 140, 143, 144, 145, 146, 147, 148, 155, 156, 158, 162, 164, 168, 170, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 191, 194, 197, 203, 205, 206, 208, 211, 221, 222, 224, 229, 231, 233, 234, 237, 239, 245, 249, 252, 258, 259, 261, 266, 267, 268, 269, 270, 271, 280, 282, 287, 288, 289, 291, 292, 299, 300, 301, 302, 304, 306, 307, 310, 313, 321, 324, 325, 326, 327, 330, 331, 333, 334, 335, 337, 339, 340, 344, 345, 348, 349, 350, 359, 361, 363, 364, 368, 369, 370, 371, 372, 373, 374, 379, 382, 383, 385, 388, 391, 398, 399, 401, 404, 408, 415, 418, 421, 422, 423, 427, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 454, 456, 459, 460, 463, 466, 468, 470, 474, 475, 477, 480, 482, 485, 490, 492, 498, 500, 512, 514, 519, 523, 524, 532, 535, 538, 539, 542, 561, 563, 564, 565, 567, 568, 570, 571, 573, 576, 580, 582, 583, 587, 588, 589, 591, 592, 594, 596, 597, 599, 600, 601, 602, 605, 606, 607, 609, 610, 613, 614, 621, 623, 633, 637, 640, 642, 643, 644, 647, 648, 649, 654, 656, 660, 662, 667, 668, 670, 674, 675, 676, 684, 687, 688, 691, 694, 695, 696, 698, 704, 705, 706, 708, 710, 713, 715, 716, 717, 719, 721, 722, 724, 726, 728, 729, 730, 731, 732, 734, 736, 740, 741, 743, 744, 746, 747, 748, 749, 758, 760, 761, 763, 764, 766, 767, 769, 771, 777, 778, 779, 782, 783, 784, 789, 792, 794, 798, 801, 803, 804, 805, 806, 807, 810, 814, 823, 825, 827, 828, 832, 834, 835, 836, 837, 838, 839, 840, 841, 844, 846, 847, 849, 855, 856, 858, 859, 861, 863, 867, 869, 870, 876, 881, 883, 884, 885, 886, 887, 888, 889, 892, 893, 898, 900, 901, 903, 904, 905, 906, 907, 912, 914, 916, 919, 920, 921, 922, 923, 930, 931, 933, 934, 940, 945, 946, 950, 956, 957, 960, 961, 965, 966, 967, 970, 972, 974, 975, 976, 979, 980, 981, 983, 985, 986, 987, 988, 989, 991, 992, 995, 997, 998, 1000, 1001, 1006, 1008, 1010, 1012, 1013, 1014, 1021, 1023, 1025, 1030, 1032, 1033, 1035, 1038, 1040, 1041, 1042, 1043, 1045, 1049, 1051, 1053, 1058, 1060, 1061, 1063, 1067, 1071, 1074, 1075, 1076, 1077, 1080, 1081, 1082, 1086, 1087, 1092, 1093, 1094, 1097, 1098, 1099, 1104, 1105, 1109, 1112, 1114, 1115, 1117, 1119, 1125, 1127, 1128, 1130, 1136, 1141, 1142, 1143, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1163, 1164, 1166, 1167, 1169, 1174, 1175, 1177, 1178, 1179, 1183, 1194, 1196, 1198, 1199, 1202, 1204, 1205, 1206, 1208, 1209, 1210, 1212, 1214, 1216, 1217, 1218, 1220]
#print("adj.shape[0]",adj.shape[0])
idx_test7=[17, 48, 49, 66, 67, 109, 113, 120, 143, 148, 170, 175, 177, 182, 190, 203, 205, 222, 229, 231, 266, 289, 292, 299, 301, 325, 330, 335, 349, 369, 399, 422, 454, 475, 498, 532, 538, 561, 568, 573, 580, 587, 640, 647, 667, 684, 722, 729, 732, 779, 794, 801, 856, 861, 892, 912, 923, 946, 981, 997, 1001, 1040, 1041, 1063, 1075, 1119, 1125, 1130, 1148, 1151, 1174, 1179]

#idx_test8=[2, 3, 8, 17, 22, 39, 48, 49, 63, 66, 67, 87, 98, 101, 104, 109, 113, 120, 124, 133, 143, 159, 161, 166, 167, 170, 174, 175, 177, 185, 190, 193, 198, 201, 203, 205, 212, 215, 223, 226, 229, 231, 240, 241, 256, 263, 264, 266, 275, 281, 292, 299, 303, 314, 323, 325, 330, 335, 341, 349, 351, 377, 386, 389, 394, 396, 400, 405, 407, 412, 422, 425, 453, 454, 475, 476, 479, 488, 489, 501, 507, 511, 518, 520, 530, 532, 538, 544, 547, 550, 551, 555, 561, 573, 580, 587, 595, 647, 655, 667, 684, 689, 709, 729, 732, 737, 753, 756, 779, 794, 797, 801, 809, 812, 816, 818, 842, 856, 860, 865, 890, 892, 895, 902, 912, 923, 942, 946, 951, 969, 973, 977, 981, 997, 999, 1001, 1007, 1020, 1022, 1031, 1034, 1037, 1040, 1041, 1044, 1054, 1063, 1064, 1066, 1075, 1083, 1089, 1090, 1101, 1107, 1110, 1119, 1125, 1130, 1139, 1140, 1146, 1148, 1151, 1174, 1179, 1180, 1189, 1215, 1219]

idx_test8=[4, 33, 35, 40, 41, 50, 51, 53, 64, 69, 72, 74, 80, 90, 91, 110, 115, 119, 150, 157, 160, 172, 186, 195, 196, 199, 227, 228, 246, 274, 285, 315, 322, 332, 336, 346, 360, 378, 387, 395, 403, 424, 428, 462, 472, 483, 491, 506, 510, 533, 543, 558, 578, 585, 603, 604, 619, 639, 645, 653, 665, 666, 682, 683, 685, 686, 701, 711, 720, 745, 754, 759, 780, 785, 787, 790, 796, 802, 811, 821, 822, 824, 848, 850, 854, 857, 868, 878, 880, 897, 910, 911, 915, 917, 924, 944, 947, 955, 984, 996, 1039, 1047, 1050, 1078, 1079, 1084, 1120, 1123, 1133, 1158, 1182, 1186, 1191, 1203, 1207]


idx_test=np.array(idx_test8)

#idx_test=idx_test1

idx_unlabeled = np.union1d(idx_val, idx_test)





perturbations = int(args.ptb_rate * (adj.sum()//2))

adj, features, labels = preprocess(adj, features, labels, preprocess_adj=False)



# set up attack model
if 'Self' in args.model:
    lambda_ = 0
if 'Train' in args.model:
    lambda_ = 1
if 'Both' in args.model:
    lambda_ = 0.5

if 'A' in args.model:
    model = MetaApprox(nfeat=features.shape[1], hidden_sizes=[args.hidden],
                       nnodes=adj.shape[0], nclass=nclass, dropout=0.5,
                       train_iters=100, attack_features=False, lambda_=lambda_, device=device)

else:
    model = Metattack(nfeat=features.shape[1], hidden_sizes=[args.hidden],
                       nnodes=adj.shape[0], nclass=nclass, dropout=0.5,
                       train_iters=100, attack_features=False, lambda_=lambda_, device=device)

if device != 'cpu':
    adj = adj.to(device)
    features = features.to(device)
    labels = labels.to(device)
    model = model.to(device)


def test(adj):
    ''' test on HITSGNN '''

    adj = normalize_adj_tensor(adj)
    hitsgnn = HITSGNN(nfeat=features.shape[1],
              nhid=args.hidden,
              nclass=labels.max().item() + 1,
              dropout=0.5)

    if device != 'cpu':
        hitsgnn = hitsgnn.to(device)

    optimizer = optim.Adam(hitsgnn.parameters(),
                           lr=args.lr, weight_decay=5e-4)

    hitsgnn.train()

    for epoch in range(args.epochs):
        optimizer.zero_grad()
        output = hitsgnn(features, adj)
        loss_train = F.nll_loss(output[idx_train], labels[idx_train])
        acc_train = accuracy(output[idx_train], labels[idx_train])
        loss_train.backward()
        optimizer.step()

    hitsgnn.eval()
    output = hitsgnn(features, adj)


    loss_test = F.nll_loss(output[idx_test], labels[idx_test])
    acc_test = accuracy(output[idx_test], labels[idx_test])


    # print("Test set results:",
    #       "loss= {:.4f}".format(loss_test.item()),
    #       "accuracy= {:.4f}".format(acc_test.item()))

    return acc_test.item()


def main():

    acc = []
    runs = 1
    
    for i in range(runs):
        acc.append(test(adj))

    torch.cuda.empty_cache()

    #for i in range(3):
    
    modified_adj = model(features, adj, labels, idx_train,
                            idx_unlabeled, perturbations, ll_constraint=False)
    modified_adj = modified_adj.detach()

    for i in range(runs):
        acc.append(test(modified_adj))

    print("acc",acc)



    #data=pd.DataFrame({"Acc. Clean":clean_acc,"Acc. Perturbed":attacked_acc})

    #plt.figure(figsize=(6,6))
    #sns.boxplot(data=data)#, re_trainings*[accuracy_logistic]])

    #plt.title("Accuracy before/after perturbing {}% edges using model {}".format(args.ptb_rate*100, args.model))
    #plt.savefig("results_on_{}.png".format(args.dataset), dpi=600)
    #plt.show()


if __name__ == '__main__':
    main()


#neighbor type 0:
#acc [0.9151329243353784, 0.9141104294478528, 0.9263803680981596, 0.9130879345603273]

#neighbor type 1:
#acc [0.9400278940027894, 0.9232914923291492, 0.9330543933054393, 0.9191073919107392]

#neighbor type 2:
#acc [0.9401913875598086, 0.9497607655502392, 0.9425837320574162, 0.9318181818181818]

#neighbor type 3:
#acc [0.930628272251309, 0.9149214659685865, 0.9149214659685865, 0.9031413612565445]
    
#neighbor type 4:
#acc [0.947565543071161, 0.9588014981273408, 0.95131086142322, 0.9425717852684145]

#neighbor type 5:
#acc [0.9728601252609602, 0.9248434237995824, 0.9206680584551147, 0.9269311064718162]

#neighbor type 6:
#acc [0.9624505928853754, 0.9664031620553359, 0.9644268774703557, 0.9644268774703557]

#neighbor type 7:
#acc [0.8888888888888888, 0.8888888888888888, 0.8472222222222222, 0.8888888888888888]

#neighbor type 8:
#acc [0.9176470588235294, 0.9058823529411765, 0.9117647058823529, 0.9352941176470588]

#neighbor type 8-0:
#acc [0.8608695652173913, 0.5565217391304348, 0.5304347826086957, 0.5652173913043478]

